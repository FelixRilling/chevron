"use strict";var Chevron=function(){"use strict";var _more=": ";var _error="error in ";var _factory="factory";var _service="service";var _isUndefined=" is undefined";function provider(type,cf,name,deps,fn){var _this=this;if(_this.chev[name]){throw _this.id+_more+_error+name+" already exists"}else{_this.chev[name]={type:type,cf:cf,name:name,deps:deps,fn:fn,init:false};return _this}}function extend(type,cf){var _this=this;_this[type]=function(name,deps,fn){return _this.provider(type,cf,name,deps,fn)};return _this}function initialize(_this,service,list){if(!service.init){(function(){var bundle=[];service.deps.forEach(function(item){var dependency=list[item];if(dependency){bundle.push(dependency.fn)}});service=service.cf(service,bundle);service.init=true})()}return service}function recurseDependencies(_this,service,fn){service.deps.forEach(function(name){var dependency=_this.chev[name];if(dependency){recurseDependencies(_this,dependency,fn);fn(dependency)}else{throw _this.id+_more+_error+service.name+_more+"dependency "+name+_isUndefined}})}function prepare(_this,service){var list={};recurseDependencies(_this,service,function(dependency){list[dependency.name]=initialize(_this,dependency,list)});return initialize(_this,service,list)}function access(name){var _this=this,accessedService=_this.chev[name];if(accessedService){return prepare(_this,accessedService).fn}}function initService(_this){_this.extend(_service,function(service,bundle){var serviceFn=service.fn;service.fn=function(){return serviceFn.apply(null,bundle.concat(Array.from(arguments)))};return service})}function initFactory(_this){_this.extend(_factory,function(service,bundle){bundle.unshift(null);service.fn=new(Function.prototype.bind.apply(service.fn,bundle));return service})}var Chevron=function Chevron(id){var _this=this;_this.id=id||"cv";_this.chev={};initService(_this);initFactory(_this)};Chevron.prototype={provider:provider,access:access,extend:extend};return Chevron}();