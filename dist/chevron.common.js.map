{"version":3,"file":"chevron.common.js","sources":["../node_modules/lightdash/dist/esm/src/object/name.js","esm/src/bootstrap/Bootstrappers.js","esm/src/scope/Scopes.js","esm/src/Chevron.js","esm/src/decorators/Injectable.js","esm/src/decorators/Autowired.js"],"sourcesContent":["import { isObject, isString, isSymbol } from \"lodash\";\n/**\n * Gets name of a value.\n *\n * If the value has a name or description property, the value of that is returned.\n * If the value is a string, it is returned as is.\n * Otherwise null is returned.\n *\n * @since 10.2.0\n * @memberOf Object\n * @param value Value to check.\n * @returns The name of the value.\n * @example\n * name(class Foo{})\n * // => \"Foo\"\n *\n * name(function bar(){})\n * // => \"bar\"\n *\n * name(Symbol(\"abc\"))\n * // => \"abc\"\n *\n * name(\"foo\")\n * // => \"foo\"\n *\n * name(1)\n * // => null\n */\nconst name = (value) => {\n    if (isString(value)) {\n        return value;\n    }\n    // eslint-disable-next-line no-extra-parens\n    if (isObject(value) && isString(value.name)) {\n        // eslint-disable-next-line no-extra-parens\n        return value.name;\n    }\n    if (isSymbol(value) && isString(value.description)) {\n        return value.description;\n    }\n    return null;\n};\nexport { name };\n//# sourceMappingURL=name.js.map","import { isFunction } from \"lodash\";\nconst createNonFunctionInitializerError = () => new TypeError(\"Non-functions cannot be bootstrapped by this bootstrapper.\");\nconst classBootstrapper = (initializer, dependencies) => {\n    if (!isFunction(initializer)) {\n        throw createNonFunctionInitializerError();\n    }\n    return Reflect.construct(initializer, dependencies);\n};\nconst functionBootstrapper = (initializer, dependencies) => (...args) => {\n    if (!isFunction(initializer)) {\n        throw createNonFunctionInitializerError();\n    }\n    return initializer(...dependencies, ...args);\n};\nconst identityBootstrapper = (initializer) => initializer;\nconst Bootstrappers = {\n    CLASS: classBootstrapper,\n    FUNCTION: functionBootstrapper,\n    IDENTITY: identityBootstrapper\n};\nexport { Bootstrappers };\n//# sourceMappingURL=Bootstrappers.js.map","const singletonScoper = (name) => `SINGLETON_${name}`;\nconst prototypeScoper = () => null;\nconst Scopes = {\n    SINGLETON: singletonScoper,\n    PROTOTYPE: prototypeScoper\n};\nexport { Scopes };\n//# sourceMappingURL=Scopes.js.map","import { isNil, isString } from \"lodash\";\nimport { name as getName } from \"lightdash\";\nimport { Bootstrappers } from \"./bootstrap/Bootstrappers\";\nimport { Scopes } from \"./scope/Scopes\";\nconst guessName = (initializer) => {\n    const guessedName = getName(initializer);\n    if (isNil(guessedName)) {\n        throw new TypeError(`Could not guess name of ${initializer}, please explicitly define one.`);\n    }\n    return guessedName;\n};\nconst getInjectableName = (name) => isString(name) ? name : guessName(name);\nconst createCircularDependencyError = (entryName, resolveStack) => {\n    return new Error(`Circular dependencies found: '${[...resolveStack, entryName].join(\"->\")}'.`);\n};\nclass Chevron {\n    constructor() {\n        this.injectables = new Map();\n    }\n    registerInjectable(initializer, bootstrapFn = Bootstrappers.IDENTITY, dependencies = [], name = null, scopeFn = Scopes.SINGLETON) {\n        const entryName = isString(name) ? name : guessName(initializer);\n        if (this.injectables.has(entryName)) {\n            throw new Error(`Name already exists: '${entryName}'.`);\n        }\n        this.injectables.set(entryName, {\n            bootstrapFn,\n            scopeFn,\n            dependencies,\n            initializer,\n            instances: new Map()\n        });\n    }\n    hasInjectable(name) {\n        return this.injectables.has(getInjectableName(name));\n    }\n    hasInjectableInstance(name, context = null) {\n        const { entry, instanceName } = this.resolveInjectableInstance(name, context);\n        return instanceName != null && entry.instances.has(instanceName);\n    }\n    getInjectableInstance(name, context = null) {\n        return this.getBootstrappedInjectableInstance(name, context, new Set());\n    }\n    resolveInjectableInstance(name, context) {\n        const entryName = getInjectableName(name);\n        if (!this.injectables.has(entryName)) {\n            throw new Error(`Injectable '${name}' does not exist.`);\n        }\n        const entry = this.injectables.get(entryName);\n        const instanceName = entry.scopeFn(entryName, entry, context);\n        return { entryName, entry, instanceName };\n    }\n    getBootstrappedInjectableInstance(name, context, resolveStack) {\n        const { entryName, entry, instanceName } = this.resolveInjectableInstance(name, context);\n        if (instanceName != null && entry.instances.has(instanceName)) {\n            return entry.instances.get(instanceName);\n        }\n        /*\n         * Start bootstrapping value.\n         */\n        if (resolveStack.has(entryName)) {\n            throw createCircularDependencyError(entryName, resolveStack);\n        }\n        resolveStack.add(entryName);\n        const instance = entry.bootstrapFn(entry.initializer, entry.dependencies.map(dependencyName => this.getBootstrappedInjectableInstance(dependencyName, context, resolveStack)));\n        if (instanceName != null) {\n            entry.instances.set(instanceName, instance);\n        }\n        resolveStack.delete(entryName);\n        return instance;\n    }\n}\nexport { Chevron };\n//# sourceMappingURL=Chevron.js.map","import { Bootstrappers } from \"../bootstrap/Bootstrappers\";\nimport { Scopes } from \"../scope/Scopes\";\nconst Injectable = (instance, bootstrapFn = Bootstrappers.IDENTITY, dependencies = [], name = null, scopeFn = Scopes.SINGLETON) => (target) => {\n    instance.registerInjectable(target, bootstrapFn, dependencies, name, scopeFn);\n    return target;\n};\nexport { Injectable };\n//# sourceMappingURL=Injectable.js.map","const Autowired = (instance, name, context = null) => (target, propertyKey) => {\n    target[propertyKey] = instance.getInjectableInstance(name, context);\n};\nexport { Autowired };\n//# sourceMappingURL=Autowired.js.map"],"names":["isString","isObject","isSymbol","isFunction","getName","isNil"],"mappings":"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"}